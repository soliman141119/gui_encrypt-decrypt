<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>